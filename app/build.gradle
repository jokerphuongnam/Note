plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.note"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding {
        enabled = true
    }
    defaultConfig {
        multiDexEnabled true
    }
    defaultConfig {
        vectorDrawables.useSupportLibrary = true
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //for testing retrofit.
    testImplementation "com.squareup.okhttp3:mockwebserver:4.7.2"
    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.12'
    // Optional -- Robolectric environment
    testImplementation 'androidx.test:core:1.0.0'
    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'org.mockito:mockito-android:2.7.22'
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.4.31"

    coil()

    splashy()

    ktx()

    daggerHilt()

    paging()

    retrofit()

    rxjava()

    room()

    dataStore()

    viewPager2()
}

private void coil(){
    //glide
    def coil_version = "1.2.0"
    dependencies.implementation "io.coil-kt:coil:$coil_version"
}


private void splashy(){
    def splashy_version = "1.3.0"
    dependencies.implementation "com.rbddevs.splashy:splashy:$splashy_version"
}

private void ktx(){
    //ktx
    def fragment_ktx_version = "1.3.1"
    dependencies.implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"
}

private void daggerHilt(){
    //dagger hilt
    def hilt_version = "2.33-beta"
    dependencies.implementation "com.google.dagger:hilt-android:$hilt_version"
    dependencies.kapt "com.google.dagger:hilt-compiler:$hilt_version"
}

private void paging(){
    //paging
    def paging_version = "3.0.0-beta02"
    dependencies.implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    // optional - RxJava3 support
    dependencies.implementation "androidx.paging:paging-rxjava3:$paging_version"
}

private void rxjava(){
    //rxjava
    def rxjava_version = "3.0.0"
    dependencies.implementation "io.reactivex.rxjava3:rxandroid:$rxjava_version"
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    // (see https://github.com/ReactiveX/RxJava/releases for latest 3.x.x version)
    dependencies.implementation "io.reactivex.rxjava3:rxjava:$rxjava_version"
}

private void retrofit(){
    // Retrofit & OkHttp
    def retrofit_version = "1.6.0"
    def okhttp_log_version = "3.4.1"
    def gson_convert_version = "2.7.0"
    def rxjava_version = "3.0.0"
    dependencies.implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    dependencies.implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_log_version"
    //rxjava adapter for retrofit
    dependencies.implementation "com.github.akarnokd:rxjava3-retrofit-adapter:$rxjava_version"
    //gson converter adapter
    dependencies.implementation "com.squareup.retrofit2:converter-gson:$gson_convert_version"
}

private void room(){
    //room
    def room_version = "2.3.0-alpha04"
    dependencies.implementation "androidx.room:room-runtime:$room_version"
    dependencies.kapt "androidx.room:room-compiler:$room_version"
    dependencies.implementation "androidx.room:room-rxjava3:$room_version"
}

private void dataStore(){
    def data_store_version ="1.0.0-alpha08"
    dependencies.implementation "androidx.datastore:datastore-preferences:$data_store_version"
    // optional - RxJava3 support
    dependencies.implementation "androidx.datastore:datastore-preferences-rxjava3:$data_store_version"
}

private void viewPager2(){
    def material_version = "1.1.0-beta01"
    dependencies.implementation "com.google.android.material:material:$material_version"
}
